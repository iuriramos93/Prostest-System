name: CI Docker Build

on:
  push:
    branches: ["main", "develop"] # Adapte para suas branches principais
  pull_request:
    branches: ["main", "develop"]

jobs:
  build_docker_images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Backend Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./backend # Contexto do Dockerfile do backend
          file: ./backend/Dockerfile
          push: false # Não faz push para um registry por padrão
          tags: protestsystem-api:latest # Tag da imagem
          # Se precisar fazer login em um registry privado (ex: Docker Hub, GHCR):
          # login-server: docker.io
          # username: ${{ secrets.DOCKER_USERNAME }}
          # password: ${{ secrets.DOCKER_PASSWORD }}

      # Adicionar etapa de teste para o backend aqui, se houver comandos
      # - name: Run Backend Tests
      #   run: |
      #     echo "Comandos para rodar testes do backend aqui"
      #     # Exemplo: docker run --rm protestsystem-api:latest pytest

      - name: Build Frontend Docker image
        uses: docker/build-push-action@v4
        with:
          context: . # Contexto do Dockerfile do frontend (raiz do projeto)
          file: ./Dockerfile # Caminho para o Dockerfile do frontend
          push: false # Não faz push para um registry por padrão
          tags: protestsystem-frontend:latest # Tag da imagem


      # Adicionar etapa de teste para o frontend aqui, se houver comandos
      # - name: Run Frontend Tests
      #   run: |
      #     echo "Comandos para rodar testes do frontend aqui"
      #     # Exemplo: docker run --rm protestsystem-frontend:latest npm test

      # Opcional: Se quiser usar docker-compose para subir os serviços e testar a integração
      # - name: Start services with Docker Compose
      #   run: docker-compose -f docker-compose.yml up -d
      #
      # - name: Run Integration Tests (exemplo)
      #   run: |
      #     echo "Comandos para rodar testes de integração aqui"
      #     # Exemplo: curl http://localhost:5001/api/health
      #
      # - name: Stop services
      #   if: always() # Garante que os serviços sejam parados mesmo se os testes falharem
      #   run: docker-compose -f docker-compose.yml down
